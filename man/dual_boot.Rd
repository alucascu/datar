% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/boots.R
\name{dual_boot}
\alias{dual_boot}
\title{Dual Boot}
\usage{
dual_boot(
  x,
  y,
  fun,
  n = map2(x, y, function(xs, ys) min(length(xs), length(ys))),
  B = 1001
)
}
\arguments{
\item{x}{List of observations}

\item{y}{Second List of observations}

\item{fun}{Character vector of function to compute the desired statistic}

\item{n}{Size of a single bootstrap sample}

\item{B}{Number of boostrap samples to take}
}
\value{
Dataframe containing the estimate and the confidence intervals
}
\description{
'dual_boot' is a function which performs a bootstrap on a function which takes two inputs
}
\details{
While I believe it to be feasible to simply pass the second arg as as \code{...} arg, I find this solution
unsatisfying. To remedy this, this bootstrap function introduces a new package dependency of purrr.
Aside from maybe being a touch faster, the map functions provide exceedingly good readability in my mind.
}
\examples{
{
library(datar)
library(purrr)
# Create a list of randomly generated normal samples of different sizes at mean_x = 5, mean_y = 10
d_x_norm <- map(1:3, \(x) 10^x) |> map(\(y) rnorm(y, 5))
d_y_norm <- map(1:3, \(x) 10^x) |> map(\(y) rnorm(y, 10))

dual_boot(d_x_norm, d_y_norm, "cpp_hle2")
}

}
\references{
DATA 495 lectures with John Kloke
}
